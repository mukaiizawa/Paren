(require :stdlib *module-stdlib*)
(require :regex *module-regex*)

(defun collect-c-files ()
  (remove-if (lambda (path)
               (string/= (pathname-type path) "c"))
             (ls "./" :dir nil)))

(defun collect-depend ()
  (labels ((walk (path traversed)
                 (dolist (line (read-from path))
                   (when (match?->string "^#include \".*\"" line)
                     (let* ((quoted (match?->string "\".*\"" line))
                            (dep (subseq quoted 1 (1- (length quoted)))))
                       (princ (mkstr " " dep))
                       (unless (find dep traversed :test #'string=)
                         (walk dep (cons dep traversed))))))))
    (dolist (cfile (collect-c-files))
      (princ (mkstr (pathname-name cfile) ".o: " (file-namestring cfile)))
      (walk cfile nil)
      (fresh-line))))

(collect-depend)
